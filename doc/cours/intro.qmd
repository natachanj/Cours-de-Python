---
title: "Programmation avec Python : Bases et Applications"
description: "[Slides](intro-python-slides.html)"
author: "Natacha Njongwa Yepnga"
format: 
  html:
    toc: true
    toc-location: left
    toc-depth: 2
  revealjs:
    theme: moon
    footer: "[Home](../../index.html) --- [Introduction à Python](intro-python.html)"
    slide-number: c/t                    # collapsed/total
    slide-level: 3
    controls: true
    output-file: intro-python-slides.html
mermaid:
  theme: forest
code-line-numbers: true
from: markdown+emoji
---

## Programmation avec Python : Bases et Applications

- **18h** : CM+TP
- Contact : natachayepnga@gmail.com
- Outils recommandés : VS Code, Jupyter Notebook

---

## Objectifs

- Comprendre les bases du langage Python.
- Manipuler les variables, types de données et structures de contrôle.
- Explorer les bibliothèques populaires : NumPy, Pandas, Matplotlib.
- Introduire les concepts de machine learning avec Scikit-learn.
- Réaliser un projet intégrant toutes les notions vues.

---

## Python

- **Langage polyvalent** : data science, machine learning, développement web, automatisation.
- **Avantages** :
  - Syntaxe simple et claire.
  - Large écosystème de bibliothèques open source.
  - Utilisé par des entreprises, start-ups, et dans la recherche académique.

---

## Organisation des TP

- **5 TP + 1 projet final**
- **Environnements** : VS Code, Jupyter Notebook, Google Colab.
- **Approche** : Alternance entre exercices guidés et explorations libres.
- Les projets doivent suivre une structuration rigoureuse :
  - Nettoyage des données.
  - Visualisation.
  - Analyse et modélisation.

---

## Ce qu'il faut faire

- Lisez attentivement les consignes de chaque TP.
- Essayez de résoudre les exercices par vous-même.
- Recherchez dans les cours et tutoriels en ligne.
- Travaillez en binôme pour échanger des idées.
- Posez des questions à l'enseignante en cas de blocage.

---

## À ne pas faire

- Utiliser ChatGPT sans comprendre la solution.
- Copier/coller des réponses sans vérifier leur validité.
- Ne pas documenter votre code ou vos démarches.

> **Note** : Ces pratiques nuisent à l’apprentissage et à la compréhension.

---

## Évaluation

- **Partie 1** : Projet à faire à la maison.
  - Sujet distribué une semaine avant la date de l'examen.
  - Analyse et exploration d’un dataset fourni.
  - À rendre sous forme d’un notebook bien structuré :
    - Explication des étapes de nettoyage.
    - Visualisation des données et interprétation.
    - Conclusions et recommandations.

---

- **Partie 2** : QCM.
  - Durée : 2h.
  - Questions portant sur les concepts abordés pendant le cours et les TP.
  - La date sera définie à l'avance.

---

## Bibliographie {.smaller}

- [Documentation officielle Python](https://docs.python.org/3/)
- [Cours excellent de l'ENSAE] (https://pythonds.linogaliana.fr/)
- [Python for Everybody](https://www.py4e.com/)
- [Python Crash Course (Livre)](https://nostarch.com/pythoncrashcourse2e)
- [Site](https://www.lamsade.dauphine.fr/~manouvri/PYTHON/CoursPython_MM.html)
- [Mémento Bases Python 3](https://python-simple.com/) de Laurent POINTAL, 2012-2013
- [Abrégé Dense Python 3.2](https://python-simple.com/) de Laurent POINTAL, 2012

---

- [A Quick, Painless Tutorial on the Python Language](https://heather.cs.ucdavis.edu/~matloff/Python/PythonIntro.pdf) de Norman Matloff, 2008 (PDF)
- [Tutoriels Python en ligne](https://www.python.org/about/gettingstarted/)
- [Dernière version de Python et interface IDLE](https://www.python.org/downloads/)
- [Outil IEP (Interactive Editor for Python)](https://iep-project.github.io/)
- [Think Python - How to Think Like a Computer Scientist](https://greenteapress.com/wp/think-python-2e/) d'Allen B. Downey, 2014
- [Apprendre à programmer avec Python](https://inforef.be/swi/download/apprendre_python3_5.pdf) de Gérard Swinnen, 2009

---

- [Une introduction à Python 3](https://python-simple.com/) de Robert CORDEAU et Laurent POINTAL, 2010
- [Cours Python de l'École Polytechnique Universitaire UMPC](http://python.developpez.com/cours/)
- [Documentation sur l'intégration C/C++/Python](https://docs.python.org/3/extending/index.html)
- [Python Development with PyDev and Eclipse](https://www.vogella.com/tutorials/Python/article.html) - Tutorial de Lars Vogel, 2011
- [Apprenez à programmer en Python - Site du Zéro](https://zestedesavoir.com/tutoriels/497/programmation-en-python/) - Vincent Le Goff, 2011
- [Association francophone Python](https://www.afpy.org/)
